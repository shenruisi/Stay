(()=>{var __webpack_modules__={"./src/darkmode/fallback.js":()=>{eval('/* eslint-disable */\n(function () {\n  "use strict";\n\n  injectFallback();\n  function injectFallback() {\n    let startTime = new Date().getTime();\n    // console.log("fallback,startTime----",startTime);\n    function getDomain(url) {\n      try {\n        return new URL(url).hostname.toLowerCase();\n      } catch (error) {\n        return url.split("/")[0].toLowerCase();\n      }\n    }\n    let browserDomain = getDomain(window.location.href);\n    let darkmodeSettingStr = window.localStorage.getItem("FETCH_DARK_SETTING");\n    if (darkmodeSettingStr && darkmodeSettingStr !== "" && darkmodeSettingStr !== "null" && darkmodeSettingStr !== "undefined" && darkmodeSettingStr != "clean_up" && darkmodeSettingStr != "dark_mode") {\n      let darkmodeSettingStorage = JSON.parse(darkmodeSettingStr);\n      let darkmodeSetting = {\n        ...darkmodeSettingStorage\n      };\n      darkModeInit(darkmodeSetting);\n      // console.log("cleanupDarkmode---1-", (startTime - new Date().getTime()), ",darkStayAround=");\n    } else {\n      browser.runtime.sendMessage({\n        from: "darkmode",\n        operate: "FETCH_DARK_SETTING"\n      }, response => {\n        if (response.body && JSON.stringify(response.body) != "{}") {\n          darkmodeSetting = response.body;\n          window.localStorage.setItem("FETCH_DARK_SETTING", JSON.stringify(darkmodeSetting));\n        }\n        // console.log("cleanupDarkmode---2-", (startTime - new Date().getTime()), ",darkStayAround=");\n        darkModeInit(darkmodeSetting);\n      });\n    }\n    function matchesMediaQuery(query) {\n      return Boolean(window.matchMedia(query).matches);\n    }\n    function matchesDarkTheme() {\n      return matchesMediaQuery("(prefers-color-scheme: dark)");\n    }\n    function checkDarkState(darkmodeSetting) {\n      // console.log("darkmodeSetting.siteListDisabled ====", darkmodeSetting.siteListDisabled , !darkmodeSetting.siteListDisabled.includes(browserDomain))\n      if (typeof darkmodeSetting.darkState != "undefined" && darkmodeSetting.darkState !== "" && darkmodeSetting.darkState === "dark_mode") {\n        return true;\n      } else {\n        if (typeof darkmodeSetting.isStayAround != "undefined" && darkmodeSetting.isStayAround !== "" && darkmodeSetting.isStayAround === "a") {\n          if (matchesDarkTheme() && darkmodeSetting.toggleStatus != "off" && darkmodeSetting.siteListDisabled && darkmodeSetting.siteListDisabled !== "[]" && darkmodeSetting.siteListDisabled.length > 0 && !darkmodeSetting.siteListDisabled.includes(browserDomain) || !matchesDarkTheme() && darkmodeSetting.toggleStatus === "on" && darkmodeSetting.siteListDisabled && darkmodeSetting.siteListDisabled !== "[]" && darkmodeSetting.siteListDisabled.length > 0 && !darkmodeSetting.siteListDisabled.includes(browserDomain)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n    function darkModeInit(darkmodeSetting) {\n      if (!document.querySelector(".darkreader--fallback") && !(document.querySelector(".noir") && document.querySelector(".noir-root")) && document.documentElement instanceof HTMLHtmlElement && checkDarkState(darkmodeSetting)) {\n        const css = \'html, body, body :not(iframe):not(div[style^="position:absolute;top:0;left:-"]) { background-color: #181a1b !important; border-color: #776e62 !important; color: #e8e6e3 !important; } html, body { opacity: 1 !important; transition: none !important; }\';\n        const fallback = document.createElement("style");\n        fallback.classList.add("darkreader");\n        fallback.classList.add("darkreader--fallback");\n        fallback.media = "screen";\n        fallback.textContent = css;\n        if (document.head) {\n          document.head.append(fallback);\n        } else {\n          const root = document.documentElement;\n          root.append(fallback);\n          const observer = new MutationObserver(() => {\n            if (document.head) {\n              observer.disconnect();\n              if (fallback.isConnected) {\n                document.head.append(fallback);\n              }\n            }\n          });\n          observer.observe(root, {\n            childList: true\n          });\n        }\n      }\n    }\n  }\n})();\n/* eslint-disable */\n\n//# sourceURL=webpack://stay-popup/./src/darkmode/fallback.js?')}},__webpack_exports__={};__webpack_modules__["./src/darkmode/fallback.js"]()})();